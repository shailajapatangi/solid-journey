/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/9.0.12
 * Generated at: 2018-12-10 18:59:27 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;
import java.sql.*;
import com.mysql.jdbc.StringUtils;

public final class editAction_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("java.sql");
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = new java.util.HashSet<>();
    _jspx_imports_classes.add("com.mysql.jdbc.StringUtils");
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    if (!javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      final java.lang.String _jspx_method = request.getMethod();
      if ("OPTIONS".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        return;
      }
      if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSPs only permit GET, POST or HEAD. Jasper also permits OPTIONS");
        return;
      }
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=ISO-8859-1");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("<!DOCTYPE html>\r\n");
      out.write("<html>\r\n");
      out.write("<head>\r\n");
      out.write("<meta charset=\"ISO-8859-1\">\r\n");
      out.write("<title>Insert title here</title>\r\n");
      out.write("</head>\r\n");
      out.write("<body>\r\n");



String cid   = request.getParameter("cid");
String fname = request.getParameter("fname");
String mname = request.getParameter("mname");
String lname = request.getParameter("lname");
String work_zip=request.getParameter("work_zip");
String work_state=request.getParameter("work_state");
String work_city=request.getParameter("work_city");
String work_address=request.getParameter("work_address");
String work_phone=request.getParameter("work_phone");
String home_zip=request.getParameter("home_zip");
String home_state=request.getParameter("home_state");
String home_city=request.getParameter("home_city");
String home_address=request.getParameter("home_address");
String home_phone=request.getParameter("home_phone");
String birthday=request.getParameter("birthday");
String cell_phone=request.getParameter("cell_phone");

String wphone_areacode=request.getParameter("wphone_areacode");
String cphone_areacode=request.getParameter("cphone_areacode");
String hphone_areacode=request.getParameter("hphone_areacode");

String home_add_id=request.getParameter("home_add_id");
String work_add_id=request.getParameter("work_add_id");
String Cell_phone_id=request.getParameter("Cell_phone_id");
String home_phone_id=request.getParameter("home_phone_id");
String work_phone_id=request.getParameter("work_phone_id");
String birthday_id=request.getParameter("birthday_id");
int  num1=Integer.parseInt(cid);
try{
    Class.forName("com.mysql.jdbc.Driver");
    String url     = "jdbc:mysql://localhost:3306/temp";
    String user    = "root";
    String pass    = "password";
    Connection con = DriverManager.getConnection(url, user, pass);
    Statement stmt = con.createStatement();
    String sql     = "UPDATE contact SET "+
	                 "  first_name = '"+fname +"', "+
                     "  middle_name = '"+mname+"', "+
                    		 "  last_name = '"+lname+"'"+
                     " WHERE contact_id = "+cid;
    	stmt.executeUpdate(sql);
    	
    	try{
    	if(home_add_id.equals(null)   || home_add_id.equals("null")){
    		   sql     = "INSERT INTO address (contact_id,address_type, address, city, state, zip)  values ( "+
    		            +num1 +", "+
    		            "'"+"Home address"+"', "+
    		            "'"+home_address+"  "+"',"+
    		            "'"+home_city+"  "+"',"+
    		            "'"+home_state+"  "+"',"+
    		            "'"+home_zip+"  "+"'"+
    		            ")";
    		stmt.executeUpdate(sql);
    	}else{
    		int num=Integer.parseInt(home_add_id);
    sql     = "UPDATE address SET "+
                "  address = '"+home_address+"', "+
               	"  city = '"+home_city+"',"+
             	 "  state = '"+home_state+"',"+
               	 "  zip = '"+home_zip+"'"+
                "   WHERE address_id ="+num;
		stmt.executeUpdate(sql);
    	}
    	}catch(Exception e){
    		
    	}
    	
    	try{
        	if(work_add_id.equals(null)   || work_add_id.equals("null")){
    		 sql     = "INSERT INTO address (contact_id,address_type, address, city, state, zip) values ( "+
    	               +num1 +", "+
    	               "'"+"Work address"+"', "+
    	               "'"+work_address+"  "+"',"+
    	               "'"+work_city+"  "+"',"+
    	               "'"+work_state+"  "+"',"+
    	               "'"+work_zip+"  "+"'"+
    	               ")";
    	   stmt.executeUpdate(sql);
    	}else{
    		 int  num=Integer.parseInt(work_add_id);
		sql     = "UPDATE address SET "+
                "  address = '"+work_address+"', "+
               	"  city = '"+work_city+"',"+
             	 "  state = '"+work_state+"',"+
               	 "  zip = '"+work_zip+"'"+
                "   WHERE address_id ="+num;
		stmt.executeUpdate(sql);
    	}
    	}catch(Exception e){
    		
    	}
    	
    	try{
    	if(Cell_phone_id.equals(null)   || Cell_phone_id.equals("null")){
    		sql     = "INSERT INTO phone (contact_id,phone_type, area_code, number) values ( "+
                    "'"+cid +"', "+
                    "'"+"Cell phone"+"', "+
                    "'"+cphone_areacode+"',"+
                    "'"+cell_phone+"'"+
                    ")";
        stmt.executeUpdate(sql);
    	}else{
    		 int  num=Integer.parseInt(Cell_phone_id);
		 if(!StringUtils.isNullOrEmpty(work_phone)){
		sql     = "UPDATE phone SET "+
				  "  area_code = '"+cphone_areacode+"', "+
	               	"  number = '"+cell_phone+"'"+
                "  WHERE phone_id = "+num;
		stmt.executeUpdate(sql);
		 }
		 
    	}}catch(Exception e){
    		
    	}

	try{
    	if(work_phone_id.equals(null)   || work_phone_id.equals("null")){
    		 sql     = "INSERT INTO phone (contact_id,phone_type, area_code, number) values ( "+
                     "'"+cid +"', "+
                     "'"+"Work phone"+"', "+
                     "'"+wphone_areacode+"',"+
                     "'"+work_phone+"'"+
                     ")";
         stmt.executeUpdate(sql);
    	}else{
   		 int  num=Integer.parseInt(work_phone_id);
    		 if(!StringUtils.isNullOrEmpty(work_phone)){
    				sql     = "UPDATE phone SET "+
    		                "  area_code = '"+wphone_areacode+"', "+
    		               	"  number = '"+work_phone+"'"+
    		                "  WHERE phone_id = "+num;
    				stmt.executeUpdate(sql);
    				 }
    	}}catch(Exception e){
    		
    	}
	try{
 	if(home_phone_id.equals(null)   || home_phone_id.equals("null")){
		sql     = "INSERT INTO phone (contact_id,phone_type, area_code, number) values ( "+
                "'"+cid +"', "+
                "'"+"Home phone"+"', "+
                "'"+hphone_areacode+"',"+
                "'"+home_phone+"'"+
                ")";
    stmt.executeUpdate(sql);
    	}else{ 
    		if(!home_phone_id.equals("null")) {
    		  int  num=Integer.parseInt(home_phone_id);
		  if(!StringUtils.isNullOrEmpty(home_phone_id)){
			
		sql     = "UPDATE phone SET "+
                "  area_code = '"+hphone_areacode+"', "+
               	"  number = '"+home_phone+"'"+
                "  WHERE phone_id = "+num;
		stmt.executeUpdate(sql);
		  }
    		}
   	}} catch(Exception e){
		
	}	
	try{
		  if(birthday_id.equals(null)   || birthday_id.equals("null")){
			  sql     = "INSERT INTO date (contact_id,date, date_type) values ( "+
		                 "'"+cid +"', "+
		                 "'"+birthday+"', "+
		                 "'"+"Birth Date"+"'"+
		                 ")";
		     stmt.executeUpdate(sql);
		  }else{
			  int  num=Integer.parseInt(birthday_id);
		sql     = "UPDATE date SET "+
                "  date = '"+birthday+"'"+
                "  WHERE date_id = "+num;
		stmt.executeUpdate(sql);
		  }}catch(Exception e){
	    		
	    	}
		
	con.close();
	
  } catch(Exception e){
      //System.out.println(e);
  }


      out.write("\t\r\n");
      out.write("\r\n");
      if (true) {
        _jspx_page_context.forward("index.jsp");
        return;
      }
      out.write("\r\n");
      out.write("</body>\r\n");
      out.write("</html>");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
