/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/9.0.12
 * Generated at: 2018-12-10 07:38:51 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;
import com.mysql.jdbc.StringUtils;
import java.sql.*;

public final class AddAction_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("java.sql");
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = new java.util.HashSet<>();
    _jspx_imports_classes.add("com.mysql.jdbc.StringUtils");
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    if (!javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      final java.lang.String _jspx_method = request.getMethod();
      if ("OPTIONS".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        return;
      }
      if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSPs only permit GET, POST or HEAD. Jasper also permits OPTIONS");
        return;
      }
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=ISO-8859-1");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("<!DOCTYPE html>\r\n");
      out.write("<html>\r\n");
      out.write("<head>\r\n");
      out.write("<meta charset=\"ISO-8859-1\">\r\n");
      out.write("<title>Insert title here</title>\r\n");
      out.write("</head>\r\n");
      out.write("<body>\r\n");



String cid     = request.getParameter("cid");
String fname   = request.getParameter("fname");
String mname = request.getParameter("mname");
String lname = request.getParameter("lname");
String work_zip=request.getParameter("work_zip");
String work_state=request.getParameter("work_state");
String work_city=request.getParameter("work_city");
String work_address=request.getParameter("work_address");
String work_phone=request.getParameter("work_phone");
String home_zip=request.getParameter("home_zip");
String home_state=request.getParameter("home_state");
String home_city=request.getParameter("home_city");
String home_address=request.getParameter("home_address");
String home_phone=request.getParameter("home_phone");
String birthday=request.getParameter("birthday");
String cell_phone=request.getParameter("cell_phone");

String home_add_id=request.getParameter("home_add_id");
String work_add_id=request.getParameter("work_add_id");
String Cell_phone_id=request.getParameter("Cell_phone_id");
String home_phone_id=request.getParameter("home_phone_id");
String work_phone_id=request.getParameter("work_phone_id");
String birthday_id=request.getParameter("birthday_id");
  
try{
    Class.forName("com.mysql.jdbc.Driver");
    String url     = "jdbc:mysql://localhost:3306/temp";
    String user    = "root";
    String pass    = "password";
    Connection con = DriverManager.getConnection(url, user, pass);
    Statement stmt = con.createStatement();

    String sql     = "INSERT INTO contact (first_name,middle_name,last_name) values ( "+
	                 "'"+fname +"', "+
                     "'"+mname+"', "+
                     "'"+lname+"'"+
                     ")";
    stmt.executeUpdate(sql);
    
    int  num=Integer.parseInt(cid);
    cid=Integer.toString(num);
    
    if(!StringUtils.isNullOrEmpty(home_address) || !StringUtils.isNullOrEmpty(home_city) || !StringUtils.isNullOrEmpty(home_state) || !StringUtils.isNullOrEmpty(home_zip)){
     sql     = "INSERT INTO address (contact_id,address_type, address, city, state, zip)  values ( "+
            +num +", "+
            "'"+"Home address"+"', "+
            "'"+home_address+"  "+"',"+
            "'"+home_city+"  "+"',"+
            "'"+home_state+"  "+"',"+
            "'"+home_zip+"  "+"'"+
            ")";
stmt.executeUpdate(sql);
    }

    if(!StringUtils.isNullOrEmpty(work_address) || !StringUtils.isNullOrEmpty(work_city) || !StringUtils.isNullOrEmpty(work_state) || !StringUtils.isNullOrEmpty(work_zip)){
        sql     = "INSERT INTO address (contact_id,address_type, address, city, state, zip) values ( "+
               +num +", "+
               "'"+"Work address"+"', "+
               "'"+work_address+"  "+"',"+
               "'"+work_city+"  "+"',"+
               "'"+work_state+"  "+"',"+
               "'"+work_zip+"  "+"'"+
               ")";
   stmt.executeUpdate(sql);
       }

    if(!StringUtils.isNullOrEmpty(birthday)){
    	 sql     = "INSERT INTO date (contact_id,date, date_type) values ( "+
                 "'"+cid +"', "+
                 "'"+birthday+"', "+
                 "'"+"Birth Date"+"'"+
                 ")";
     stmt.executeUpdate(sql);
    }
    if(!StringUtils.isNullOrEmpty(cell_phone)){
   	 sql     = "INSERT INTO phone (contact_id,phone_type, area_code, number) values ( "+
                "'"+cid +"', "+
                "'"+"Cell phone"+"', "+
                "'"+cell_phone.substring(0, 3)+"',"+
                "'"+cell_phone.substring(4, 11)+"'"+
                ")";
    stmt.executeUpdate(sql);
   }
    if(!StringUtils.isNullOrEmpty(home_phone)){
      	 sql     = "INSERT INTO phone (contact_id,phone_type, area_code, number) values ( "+
                   "'"+cid +"', "+
                   "'"+"Home phone"+"', "+
                   "'"+home_phone.substring(0, 3)+"',"+
                   "'"+home_phone.substring(4, 11)+"'"+
                   ")";
       stmt.executeUpdate(sql);
      }
    if(!StringUtils.isNullOrEmpty(work_phone)){
     	 sql     = "INSERT INTO phone (contact_id,phone_type, area_code, number) values ( "+
                  "'"+cid +"', "+
                  "'"+"Work phone"+"', "+
                  "'"+work_phone.substring(0, 3)+"',"+
                  "'"+work_phone.substring(4, 11)+"'"+
                  ")";
      stmt.executeUpdate(sql);
     }
	con.close();
	
  } catch(Exception e){
      System.out.println(e);
  }


      out.write("\t\r\n");
      out.write("\r\n");
      if (true) {
        _jspx_page_context.forward("index.jsp");
        return;
      }
      out.write("\r\n");
      out.write("</body>\r\n");
      out.write("</html>");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
